service: vwanu-server
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 30
  environment:
    NODE_ENV: ${self:provider.stage}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    # Database
    DB_HOST: !GetAtt Database.Endpoint.Address
    DB_PORT: !GetAtt Database.Endpoint.Port
    DB_NAME: ${self:custom.config.database.name}
    DB_USERNAME: ${self:custom.config.database.username}
    DB_PASSWORD: ${env:DB_PASSWORD, 'changeme123!'}
    # S3
    S3_BUCKET: !Ref UserUploadsBucket
    # Cognito
    COGNITO_USER_POOL_ID: !Ref CognitoUserPool
    COGNITO_CLIENT_ID: !Ref CognitoUserPoolClient
    # Application
    JWT_SECRET: ${env:JWT_SECRET, 'default-jwt-secret-change-this-in-production-minimum-32-chars'}
    API_PORT: 3000
    HOST: 0.0.0.0

custom:
  config:
    database:
      name: vwanu_${self:provider.stage}
      username: vwanu_user
      instanceClass: db.t3.micro
      allocatedStorage: 20
      backupRetentionPeriod: 7
    ecs:
      cpu: 256
      memory: 512
      desiredCount: 1
    s3:
      versioning: Suspended
    cognito:
      passwordPolicy:
        minimumLength: 8
        requireLowercase: true
        requireNumbers: true
        requireSymbols: false
        requireUppercase: true

# Using pure CloudFormation instead of serverless-lift

resources:
  # Import all resource files
  - ${file(./resources/network/Network.yml)}
  - ${file(./resources/database/Database.yml)}
  - ${file(./resources/ecs/ecs.yml)}
  - ${file(./resources/cognito/UserPool.yml)}
  - ${file(./resources/s3/Storage.yml)}
  - ${file(./resources/iam/Roles.yml)}
  - ${file(./resources/parameters/ParameterStore.yml)}

outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: ${self:service}-${self:provider.stage}-vpc-id

  DatabaseEndpoint:
    Description: RDS Database Endpoint
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: ${self:service}-${self:provider.stage}-db-endpoint

  LoadBalancerDNS:
    Description: Load Balancer DNS Name
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: ${self:service}-${self:provider.stage}-alb-dns

  S3BucketName:
    Description: S3 Bucket for User Uploads
    Value: !Ref UserUploadsBucket
    Export:
      Name: ${self:service}-${self:provider.stage}-s3-bucket

  CognitoUserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref CognitoUserPool
    Export:
      Name: ${self:service}-${self:provider.stage}-cognito-pool-id

  CognitoUserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref CognitoUserPoolClient
    Export:
      Name: ${self:service}-${self:provider.stage}-cognito-client-id